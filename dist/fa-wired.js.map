{"version":3,"file":"fa-wired.js","sources":["../src/resources/js/fa-wired.js"],"sourcesContent":["/*!\n * fa-wired - Fathom Analytics Alpine.js wrapper for Laravel/Livewire\n * https://github.com/kerkness/fa-wired\n */\n\n// Version info (replaced by Vite during build)\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : '1.0.0';\nconst BUILD_DATE = typeof __BUILD_DATE__ !== 'undefined' ? __BUILD_DATE__ : new Date().toISOString();\n\n// Main FaWired object\nconst FaWired = {\n  version: VERSION,\n  buildDate: BUILD_DATE,\n  \n  // Initialize the Alpine.js integration\n  init() {\n    if (typeof document === 'undefined') {\n      console.warn('fa-wired: Document not available, skipping initialization');\n      return;\n    }\n\n    // Wait for Alpine to be ready\n    if (typeof Alpine !== 'undefined') {\n      this.initializeAlpine();\n    } else {\n      document.addEventListener('alpine:init', () => {\n        this.initializeAlpine();\n      });\n    }\n\n    // Initialize Livewire integration if available\n    if (typeof Livewire !== 'undefined') {\n      this.initializeLivewire();\n    } else {\n      document.addEventListener('livewire:init', () => {\n        this.initializeLivewire();\n      });\n    }\n\n    // Initialize auto-tracking on DOM ready\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', () => {\n        this.initializeAutoTracking();\n      });\n    } else {\n      this.initializeAutoTracking();\n    }\n  },\n\n  // Initialize Alpine.js components\n  initializeAlpine() {\n    // Global Alpine.js store for Fathom tracking\n    Alpine.store('fathom', {\n      // Track a simple event\n      track(eventName, value = null) {\n        if (typeof fathom === 'undefined') {\n          console.warn('fa-wired: Fathom Analytics not loaded');\n          return;\n        }\n\n        const options = value ? { _value: value } : {};\n        fathom.trackEvent(eventName, options);\n      },\n\n      // Track click events\n      click(eventName, value = null) {\n        this.track(eventName, value);\n      },\n\n      // Track form submissions\n      submit(eventName, value = null) {\n        this.track(eventName, value);\n      },\n\n      // Track conversions with value (value in cents)\n      conversion(eventName, value) {\n        this.track(eventName, value);\n      },\n\n      // Track download events\n      download(fileName, eventName = null) {\n        const name = eventName || `file download: ${fileName}`;\n        this.track(name);\n      },\n\n      // Track external link clicks\n      externalLink(url, eventName = null) {\n        const name = eventName || `external link: ${url}`;\n        this.track(name);\n      }\n    });\n\n    // Alpine.js magic helper for quick access\n    Alpine.magic('fathom', () => Alpine.store('fathom'));\n\n    // Alpine.js directive for automatic click tracking\n    Alpine.directive('track-click', (el, { expression }, { evaluate }) => {\n      const config = evaluate(expression);\n      const eventName = typeof config === 'string' ? config : config.event;\n      const value = typeof config === 'object' ? config.value : null;\n\n      el.addEventListener('click', () => {\n        Alpine.store('fathom').click(eventName, value);\n      });\n    });\n\n    // Alpine.js directive for automatic form submission tracking\n    Alpine.directive('track-submit', (el, { expression }, { evaluate }) => {\n      const config = evaluate(expression);\n      const eventName = typeof config === 'string' ? config : config.event;\n      const value = typeof config === 'object' ? config.value : null;\n\n      el.addEventListener('submit', () => {\n        Alpine.store('fathom').submit(eventName, value);\n      });\n    });\n\n    // Alpine.js directive for download tracking\n    Alpine.directive('track-download', (el, { expression }, { evaluate }) => {\n      const config = evaluate(expression);\n      const eventName = typeof config === 'string' ? config : config.event;\n      \n      el.addEventListener('click', (e) => {\n        const href = el.getAttribute('href');\n        const fileName = href ? href.split('/').pop() : 'unknown';\n        Alpine.store('fathom').download(fileName, eventName);\n      });\n    });\n\n    // Alpine.js directive for external link tracking\n    Alpine.directive('track-external', (el, { expression }, { evaluate }) => {\n      const config = evaluate(expression);\n      const eventName = typeof config === 'string' ? config : config.event;\n      \n      el.addEventListener('click', (e) => {\n        const href = el.getAttribute('href');\n        Alpine.store('fathom').externalLink(href, eventName);\n      });\n    });\n  },\n\n  // Initialize Livewire integration\n  initializeLivewire() {\n    // Track Livewire component interactions\n    Livewire.on('fathom-track', (data) => {\n      Alpine.store('fathom').track(data.name, data.value || null);\n    });\n\n    // Track Livewire form submissions\n    Livewire.on('fathom-form-submit', (data) => {\n      Alpine.store('fathom').submit(data.name, data.value || null);\n    });\n\n    // Track Livewire conversions\n    Livewire.on('fathom-conversion', (data) => {\n      Alpine.store('fathom').conversion(data.name, data.value);\n    });\n  },\n\n  // Initialize automatic tracking features\n  initializeAutoTracking() {\n    // Auto-track external links (optional - can be enabled via config)\n    if (this.config?.autoTrackExternalLinks) {\n      document.querySelectorAll('a[href^=\"http\"]:not([href*=\"' + window.location.hostname + '\"])').forEach(link => {\n        link.addEventListener('click', () => {\n          Alpine.store('fathom').externalLink(link.href);\n        });\n      });\n    }\n\n    // Auto-track file downloads (optional - can be enabled via config)\n    if (this.config?.autoTrackDownloads) {\n      document.querySelectorAll('a[href$=\".pdf\"], a[href$=\".doc\"], a[href$=\".docx\"], a[href$=\".xls\"], a[href$=\".xlsx\"]').forEach(link => {\n        link.addEventListener('click', () => {\n          const fileName = link.href.split('/').pop();\n          Alpine.store('fathom').download(fileName);\n        });\n      });\n    }\n  },\n\n  // Configuration object for optional features\n  config: {\n    autoTrackExternalLinks: false,\n    autoTrackDownloads: false\n  },\n\n  // Method to update configuration\n  configure(options) {\n    this.config = { ...this.config, ...options };\n  }\n};\n\n// Auto-initialize if running in browser\nif (typeof window !== 'undefined') {\n  // Make FaWired globally accessible\n  window.FaWired = FaWired;\n  \n  // Auto-initialize\n  FaWired.init();\n  \n  // Log version info in development\n  if (process.env.NODE_ENV === 'development') {\n    console.log(`fa-wired v${VERSION} initialized`);\n  }\n}\n\n// Export for module systems\nexport default FaWired;"],"names":["VERSION","FaWired","version","buildDate","init","document","Alpine","this","initializeAlpine","addEventListener","Livewire","initializeLivewire","readyState","initializeAutoTracking","console","warn","store","track","eventName","value","fathom","options","_value","trackEvent","click","submit","conversion","download","fileName","name","externalLink","url","magic","directive","el","expression","evaluate","config","event","e","href","getAttribute","split","pop","on","data","_a","autoTrackExternalLinks","querySelectorAll","window","location","hostname","forEach","link","_b","autoTrackDownloads","configure","process","env","NODE_ENV","log"],"mappings":"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"}