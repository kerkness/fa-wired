{"version":3,"file":"fa-wired.js","sources":["../src/resources/js/fa-wired.js"],"sourcesContent":["/*!\n * fa-wired - Fathom Analytics Alpine.js wrapper for Laravel/Livewire\n * https://github.com/kerkness/fa-wired\n */\n\n// Version info (replaced by Vite during build)\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : '1.0.0';\nconst BUILD_DATE = typeof __BUILD_DATE__ !== 'undefined' ? __BUILD_DATE__ : new Date().toISOString();\n\n// Main FaWired object\nconst FaWired = {\n  version: VERSION,\n  buildDate: BUILD_DATE,\n  \n  // Initialize the Alpine.js integration\n  init() {\n    if (typeof document === 'undefined') {\n      console.warn('fa-wired: Document not available, skipping initialization');\n      return;\n    }\n\n    // Wait for Alpine to be ready\n    if (typeof Alpine !== 'undefined') {\n      this.initializeAlpine();\n    } else {\n      document.addEventListener('alpine:init', () => {\n        this.initializeAlpine();\n      });\n    }\n\n    // Initialize Livewire integration if available\n    if (typeof Livewire !== 'undefined') {\n      this.initializeLivewire();\n    } else {\n      document.addEventListener('livewire:init', () => {\n        this.initializeLivewire();\n      });\n    }\n\n    // Initialize auto-tracking on DOM ready\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', () => {\n        this.initializeAutoTracking();\n      });\n    } else {\n      this.initializeAutoTracking();\n    }\n  },\n\n  // Initialize Alpine.js components\n  initializeAlpine() {\n    // Global Alpine.js store for Fathom tracking\n    Alpine.store('fathom', {\n      // Track a simple event\n      track(eventName, value = null) {\n        if (typeof fathom === 'undefined') {\n          console.warn('fa-wired: Fathom Analytics not loaded');\n          return;\n        }\n\n        const options = value ? { _value: value } : {};\n        fathom.trackEvent(eventName, options);\n      },\n\n      // Track click events\n      click(eventName, value = null) {\n        this.track(eventName, value);\n      },\n\n      // Track form submissions\n      submit(eventName, value = null) {\n        this.track(eventName, value);\n      },\n\n      // Track conversions with value (value in cents)\n      conversion(eventName, value) {\n        this.track(eventName, value);\n      },\n\n      // Track download events\n      download(fileName, eventName = null) {\n        const name = eventName || `file download: ${fileName}`;\n        this.track(name);\n      },\n\n      // Track external link clicks\n      externalLink(url, eventName = null) {\n        const name = eventName || `external link: ${url}`;\n        this.track(name);\n      }\n    });\n\n    // Alpine.js magic helper for quick access\n    Alpine.magic('fathom', () => Alpine.store('fathom'));\n\n    // Helper function to determine if expression should be evaluated or treated as string\n    const parseTrackingExpression = (expression, evaluate) => {\n      let eventName;\n      let value = null;\n      \n      // Check if it looks like a JavaScript object\n      if (expression.trim().startsWith('{') && expression.trim().endsWith('}')) {\n        try {\n          const config = evaluate(expression);\n          if (typeof config === 'object' && config !== null) {\n            eventName = config.event;\n            value = config.value || null;\n          } else {\n            eventName = expression;\n          }\n        } catch (error) {\n          eventName = expression;\n        }\n      }\n      // Check if it's a quoted string\n      else if ((expression.trim().startsWith(\"'\") && expression.trim().endsWith(\"'\")) ||\n               (expression.trim().startsWith('\"') && expression.trim().endsWith('\"'))) {\n        try {\n          eventName = evaluate(expression);\n        } catch (error) {\n          eventName = expression;\n        }\n      }\n      // Otherwise treat as plain string\n      else {\n        eventName = expression;\n      }\n      \n      return { eventName, value };\n    };\n\n    // Alpine.js directive for automatic click tracking\n    Alpine.directive('track-click', (el, { expression }, { evaluate }) => {\n      const { eventName, value } = parseTrackingExpression(expression, evaluate);\n\n      el.addEventListener('click', () => {\n        Alpine.store('fathom').click(eventName, value);\n      });\n    });\n\n    // Alpine.js directive for automatic form submission tracking\n    Alpine.directive('track-submit', (el, { expression }, { evaluate }) => {\n      const { eventName, value } = parseTrackingExpression(expression, evaluate);\n\n      el.addEventListener('submit', () => {\n        Alpine.store('fathom').submit(eventName, value);\n      });\n    });\n\n    // Alpine.js directive for download tracking\n    Alpine.directive('track-download', (el, { expression }, { evaluate }) => {\n      let eventName = null;\n      \n      // Handle empty expression (no event name provided)\n      if (!expression) {\n        eventName = null;\n      } else {\n        const { eventName: parsedEventName } = parseTrackingExpression(expression, evaluate);\n        eventName = parsedEventName;\n      }\n      \n      el.addEventListener('click', (e) => {\n        const href = el.getAttribute('href');\n        const fileName = href ? href.split('/').pop() : 'unknown';\n        Alpine.store('fathom').download(fileName, eventName);\n      });\n    });\n\n    // Alpine.js directive for external link tracking\n    Alpine.directive('track-external', (el, { expression }, { evaluate }) => {\n      const { eventName } = parseTrackingExpression(expression, evaluate);\n      \n      el.addEventListener('click', (e) => {\n        const href = el.getAttribute('href');\n        Alpine.store('fathom').externalLink(href, eventName);\n      });\n    });\n  },\n\n  // Initialize Livewire integration\n  initializeLivewire() {\n    // Track Livewire component interactions\n    Livewire.on('fathom-track', (data) => {\n      Alpine.store('fathom').track(data.name, data.value || null);\n    });\n\n    // Track Livewire form submissions\n    Livewire.on('fathom-form-submit', (data) => {\n      Alpine.store('fathom').submit(data.name, data.value || null);\n    });\n\n    // Track Livewire conversions\n    Livewire.on('fathom-conversion', (data) => {\n      Alpine.store('fathom').conversion(data.name, data.value);\n    });\n  },\n\n  // Initialize automatic tracking features\n  initializeAutoTracking() {\n    // Auto-track external links (optional - can be enabled via config)\n    if (this.config?.autoTrackExternalLinks) {\n      document.querySelectorAll('a[href^=\"http\"]:not([href*=\"' + window.location.hostname + '\"])').forEach(link => {\n        link.addEventListener('click', () => {\n          Alpine.store('fathom').externalLink(link.href);\n        });\n      });\n    }\n\n    // Auto-track file downloads (optional - can be enabled via config)\n    if (this.config?.autoTrackDownloads) {\n      document.querySelectorAll('a[href$=\".pdf\"], a[href$=\".doc\"], a[href$=\".docx\"], a[href$=\".xls\"], a[href$=\".xlsx\"]').forEach(link => {\n        link.addEventListener('click', () => {\n          const fileName = link.href.split('/').pop();\n          Alpine.store('fathom').download(fileName);\n        });\n      });\n    }\n  },\n\n  // Configuration object for optional features\n  config: {\n    autoTrackExternalLinks: false,\n    autoTrackDownloads: false\n  },\n\n  // Method to update configuration\n  configure(options) {\n    this.config = { ...this.config, ...options };\n  }\n};\n\n// Auto-initialize if running in browser\nif (typeof window !== 'undefined') {\n  // Make FaWired globally accessible\n  window.FaWired = FaWired;\n  \n  // Auto-initialize\n  FaWired.init();\n  \n  // Log version info in development\n  if (process.env.NODE_ENV === 'development') {\n    console.log(`fa-wired v${VERSION} initialized`);\n  }\n}\n\n// Export for module systems\nexport default FaWired;"],"names":["VERSION","FaWired","version","buildDate","init","document","Alpine","this","initializeAlpine","addEventListener","Livewire","initializeLivewire","readyState","initializeAutoTracking","console","warn","store","track","eventName","value","fathom","options","_value","trackEvent","click","submit","conversion","download","fileName","name","externalLink","url","magic","parseTrackingExpression","expression","evaluate","trim","startsWith","endsWith","config","event","error","directive","el","parsedEventName","e","href","getAttribute","split","pop","on","data","_a","autoTrackExternalLinks","querySelectorAll","window","location","hostname","forEach","link","_b","autoTrackDownloads","configure","process","env","NODE_ENV","log"],"mappings":"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"}